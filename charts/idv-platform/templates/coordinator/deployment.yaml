apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "idv.coordinator.fullname" . }}
  labels:
    {{- include "idv.labels" . | nindent 4 }}
    component: "coordinator"
spec:
  replicas: {{ .Values.coordinator.replicas }}
  selector:
    matchLabels:
      {{- include "idv.selectorLabels" . | nindent 6 }}
      component: "coordinator"
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/coordinator/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        {{- include "idv.selectorLabels" . | nindent 8 }}
        component: "coordinator"
    spec:
      {{- with .Values.coordinator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.coordinator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.coordinator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: coordinator
          image: "{{ .Values.images.coordinator.repository }}:{{ .Values.images.coordinator.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.coordinator.pullPolicy }}
          ports:
            - name: coordinator
              containerPort: 8000
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /api/healthcheck
              port: coordinator
              scheme: HTTP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /api/healthcheck
              port: coordinator
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.coordinator.resources | nindent 12 }}
          env:
            {{- include "idv.coordinator.sql.url" . | indent 10 }}
            {{- include "idv.coordinator.sql.url.secret" . | indent 10 }}
          {{- if .Values.coordinator.extraEnv }}
            {{- toYaml .Values.coordinator.extraEnv | nindent 8 }}
          {{- end }}
          volumeMounts:
            - name: coordinator-config
              mountPath: /app/.env
              subPath: .env
              readOnly: true
      volumes:
        - name: coordinator-config
          configMap:
            name: {{ template "coordinator.config.name" . }}
