apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gateway.fullname" . }}
  labels:
    {{- include "gateway.labels" . | nindent 4 }}
spec:
  {{- if not .Values.gateway.autoscaling.enabled }}
  replicas: {{ .Values.gateway.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/gateway/gateway-configmap.yaml") . | sha256sum }}
        {{- if .Values.gateway.podAnnotations }}
        {{- toYaml .Values.gateway.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        {{- include "gateway.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.gateway.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.gateway.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.gateway.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.gateway.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.gateway.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.gateway.securityContext | nindent 12 }}
          image: "{{ .Values.gateway.image.repository }}:{{ .Values.gateway.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
          ports:
            - name: gateway
              containerPort: 8000
              protocol: TCP
          resources:
            {{- toYaml .Values.gateway.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "gateway.config.name" . }}
            {{- if .Values.gateway.config.apiTokenSecret }}
            - secretRef:
                name: {{ .Values.gateway.config.apiTokenSecret }}
            {{- end }}
            {{- if .Values.gateway.config.secretKeySecret }}
            - secretRef:
                name: {{ .Values.gateway.config.secretKeySecret }}
            {{- end }}
            {{- if and (not .Values.postgresql.enabled) .Values.gateway.config.database.gateway.gatewaySecret }}
            - secretRef:
                name: {{ .Values.gateway.config.database.gateway.gatewaySecret }}
            {{- end }}
            {{- if .Values.gateway.config.database.tagger.taggerSecret }}
            - secretRef:
                name: {{ .Values.gateway.config.database.tagger.taggerSecret }}
            {{- end }}
            {{- if .Values.gateway.config.integration.airflow.airflowSecret }}
            - secretRef:
                name: {{ .Values.gateway.config.integration.airflow.airflowSecret }}
            {{- end }}
          env:
            {{- include "gateway_envs" . | indent 10 }}
          volumeMounts:
            {{- if .Values.gateway.extraVolumeMounts }}
              {{- toYaml .Values.gateway.extraVolumeMounts | nindent 12 }}
            {{- end }}
      volumes:
        {{- if .Values.gateway.extraVolumes }}
          {{- toYaml  .Values.gateway.extraVolumes | nindent 8 }}
        {{- end }}
